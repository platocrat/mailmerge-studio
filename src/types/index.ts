export interface AttachmentMetadata {
  name: string
  type: string
  size: number
  url: string
}

export interface STORED_OPENAI_URLS__R2 {
  summaryFileUrl: string
  visualizationUrls: string[]
}

export interface DATA_ANALYSIS_RESULT__OPENAI {
  textContent: string
  imageFiles: string[]
}

export interface ProcessedInboundEmail {
  id: string               // Project ID (used as DynamoDB Partition Key)
  // accountId: string // DynamoDB Sort Key
  sourceEmailId: string    // Original email ID
  processedAt: number // Timestamp
  fromEmail: string
  fromName: string
  subject: string
  textContent: string
  receivedAt: number
  summaryFileUrl: string   // R2 URL for visualizations' summary text (generated by OpenAI)
  visualizationUrls: string[] // R2 URLs for the visualizations (generated by OpenAI)
  attachmentUrls: string[] // R2 URLs for the attachments
  attachments: AttachmentMetadata[]
}


export interface ATTACHMENT__POSTMARK {
  Name: string
  Content: string // Base64-encoded content
  ContentType: string
  ContentLength: number
  ContentID?: string | null
}

export interface INBOUND_EMAIL__POSTMARK {
  FromName: string
  MessageStream: string
  From: string
  FromFull: {
    Email: string
    Name: string
    MailboxHash: string
  }
  To: string
  ToFull: {
    Email: string
    Name: string
    MailboxHash: string
  }[]
  Cc: string
  CcFull: {
    Email: string
    Name: string
    MailboxHash: string
  }[] | string
  Bcc: string
  BccFull: {
    Email: string
    Name: string
    MailboxHash: string
  }[] | string
  OriginalRecipient: string
  Subject: string
  MessageID: string
  ReplyTo: string
  MailboxHash: string
  Date: string
  TextBody: string
  HtmlBody: string
  StrippedTextReply: string
  Tag: string
  Headers: { Name: string; Value: string }[]
  Attachments: {
    Name: string
    Content: string
    ContentType: string
    ContentLength: number
    ContentID: string
  }[] | []
}

export interface ExtractedInboundEmailData {
  id: string
  projectId: string
  fromEmail: string
  fromName: string
  replyTo: string
  to: string
  originalRecipient: string
  subject: string
  textBody: string
  htmlBody: string
  attachments: {
    name: string
    type: string
    size: number
    content: string
    contentId: string
  }[]
  receivedAt: number
}

export interface PROJECT__DYNAMODB {
  accountEmail: string // DynamoDB Partition Key
  id: string // DynamoDB Sort Key
  name: string // Human-readable project name
  postmarkInboundEmail: string  // Unique inbound email address for the project
  createdAt: number // Unix epoch (ms) when created â€“ serves as Sort Key if needed
  status: 'Active' | 'Inactive' // Current state of the project
  emails?: ProcessedInboundEmail[] | [] // Processed Postmark inbound emails
  emailCount?: number // Total inbound emails processed
  description?: string // Optional description
  lastActivity?: number // Timestamp of last processed email
}


export type HashedPassword = {
  hash: string
  salt: string
}


export type ACCOUNT__DYNAMODB = {
  email: string // Partition/Primary Key
  createdAt: number
  password: HashedPassword
  projects: PROJECT__DYNAMODB[] | []
  lastSignIn: number
  lastSignOut: number
  updatedAt: number // Default value is the same as `createdAt`
}


export type EncryptedCookieField = {
  iv: string
  encryptedData: string
}


export type CookieType = {
  email: EncryptedCookieField
  password: EncryptedCookieField
  signedInAt: EncryptedCookieField
}